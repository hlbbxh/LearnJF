1.------------------>>>>在ftl模板中获取属性资源文件对应的内容，这部分可以参照国际化来查看进行
	配置文件：
	spring.messages.basename: language_cn
	# i18n/messages 这样的文件夹形式
	spring.messages.basename.encoding: UTF-8
	
	配置类：
	@Configuration
	public class MessageSourceConfig {
	
	    @Bean(name = "messageSource")
	    public ResourceBundleMessageSource getMessageSource() throws Exception {
	        ResourceBundleMessageSource resourceBundleMessageSource = new ResourceBundleMessageSource();
	        resourceBundleMessageSource.setDefaultEncoding("UTF-8");
	        resourceBundleMessageSource.setBasenames("language_cn");
	        return resourceBundleMessageSource;
	    }
	}
	
	ftl模板中的使用：
	${springMacroRequestContext.getMessage("staff")}
	
	在springmvc中的application.xml中配置标签就可以了
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>package</value>
			</list>
		</property>
	</bean>

	
2.------------------>>>>2.自定义注解的使用，获取注解中参数的属性和属性的默认值
	注解java代码。@interface
	@Target({ElementType.METHOD,ElementType.TYPE})// 表示这个注解可以用用在类/接口上，还可以用在方法上
	@Retention(RetentionPolicy.RUNTIME)// 表示这是一个运行时注解，即运行起来之后，才获取注解中的相关信息，而不像基本注解如@Override 那种不用运行，在编译时eclipse就可以进行相关工作的编译时注解。
	@Inherited//表示这个注解可以被子类继承
	@Documented//表示当执行javadoc的时候，本注解会生成相关文档
	public @interface JDBCConfig {
	     String ip();
	     int port() default 3306;
	     String database();
	     String encoding();
	     String loginName();
	     String password();
	}
	
	通过反射进行获取
	@JDBCConfig(ip = "127.0.0.1", database = "test", encoding = "UTF-8", loginName = "root", password = "admin")//注解
	public class DBUtilTest {
		public static void main(String[] args) {
			//接下来就通过反射，获取这个DBUtil这个类上的注解对象
			JDBCConfig config = DBUtilTest.class.getAnnotation(JDBCConfig.class);//获取当前注解 
	        String ip = config.ip();//
	        int port = config.port();
	        String database = config.database();
	        String encoding = config.encoding();
	        String loginName = config.loginName();
	        String password = config.password();
		}
	}

	
